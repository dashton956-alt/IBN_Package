name: AI PR Review for n8n Workflows

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'n8n/workflows/**/*.json'
  
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to review'
        required: true
        type: number

env:
  N8N_AI_REVIEW_WEBHOOK: ${{ secrets.N8N_AI_REVIEW_WEBHOOK }}

jobs:
  ai-review:
    name: AI Workflow Review
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get PR number
        id: pr
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          else
            echo "number=${{ github.event.inputs.pr_number }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Get changed workflow files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            n8n/workflows/**/*.json
      
      - name: Check for workflow changes
        id: check
        run: |
          if [ "${{ steps.changed-files.outputs.any_changed }}" = "true" ]; then
            echo "has_workflows=true" >> $GITHUB_OUTPUT
            echo "count=${{ steps.changed-files.outputs.all_changed_files_count }}" >> $GITHUB_OUTPUT
          else
            echo "has_workflows=false" >> $GITHUB_OUTPUT
            echo "count=0" >> $GITHUB_OUTPUT
          fi
      
      - name: Post pending comment
        if: steps.check.outputs.has_workflows == 'true'
        id: comment
        uses: actions/github-script@v7
        with:
          script: |
            const comment = await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.pr.outputs.number }},
              body: '## ü§ñ AI Workflow Review\n\n‚è≥ **Status:** Review in progress...\n\nFound ${{ steps.check.outputs.count }} workflow file(s) to review.\n\nThis may take a minute or two.'
            });
            return comment.data.id;
          result-encoding: string
      
      - name: Trigger AI review via n8n
        if: steps.check.outputs.has_workflows == 'true'
        id: review
        run: |
          pr_data=$(gh pr view ${{ steps.pr.outputs.number }} --json number,title,body,headRefName,baseRefName,additions,deletions,changedFiles,author)
          
          changed_files='${{ steps.changed-files.outputs.all_changed_files }}'
          
          payload=$(jq -n \
            --argjson pr "$pr_data" \
            --arg files "$changed_files" \
            --arg repo "${{ github.repository }}" \
            --arg sha "${{ github.event.pull_request.head.sha }}" \
            '{
              pr_number: $pr.number,
              pr_title: $pr.title,
              pr_body: $pr.body,
              head_branch: $pr.headRefName,
              base_branch: $pr.baseRefName,
              additions: $pr.additions,
              deletions: $pr.deletions,
              changed_files: $pr.changedFiles,
              author: $pr.author.login,
              repository: $repo,
              commit_sha: $sha,
              workflow_files: ($files | split(" "))
            }')
          
          response=$(curl -X POST \
            -H "Content-Type: application/json" \
            -d "$payload" \
            -w "\nHTTP_STATUS:%{http_code}" \
            "${{ env.N8N_AI_REVIEW_WEBHOOK }}")
          
          http_code=$(echo "$response" | grep "HTTP_STATUS" | cut -d: -f2)
          body=$(echo "$response" | sed '/HTTP_STATUS/d')
          
          if [ "$http_code" = "200" ] || [ "$http_code" = "201" ]; then
            echo "‚úÖ AI review triggered successfully"
            echo "$body" > review-response.json
          else
            echo "‚ùå AI review failed (HTTP $http_code)"
            exit 1
          fi
        env:
          GH_TOKEN: ${{ github.token }}
      
      - name: Update comment with review
        if: success() && steps.check.outputs.has_workflows == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let reviewText = 'Review completed successfully';
            
            try {
              const response = JSON.parse(fs.readFileSync('review-response.json', 'utf8'));
              reviewText = response.review || response.output || 'Review completed';
            } catch (e) {
              console.log('Could not parse review response, using default text');
            }
            
            const commentId = '${{ steps.comment.outputs.result }}';
            
            if (commentId) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: parseInt(commentId),
                body: `## ü§ñ AI Workflow Review\n\n‚úÖ **Status:** Review completed\n\n${reviewText}`
              });
            }
      
      - name: Handle failure
        if: failure() && steps.check.outputs.has_workflows == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const commentId = '${{ steps.comment.outputs.result }}';
            
            if (commentId) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: parseInt(commentId),
                body: '## ü§ñ AI Workflow Review\n\n‚ùå **Status:** Review failed\n\nThere was an error during the review process. Please check the workflow logs for details.'
              });
            }
      
      - name: No workflows changed
        if: steps.check.outputs.has_workflows != 'true'
        run: |
          echo "‚ÑπÔ∏è No workflow files were changed in this PR"
