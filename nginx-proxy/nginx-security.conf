# NGINX Smart Security Gateway Configuration
# Single Point of Access with Authentication, Forward Proxy, and Security Features

worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic Settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 500M;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data: *; connect-src 'self' ws: wss: *;" always;

    # Logging Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=web:10m rate=5r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json application/xml+rss application/atom+xml image/svg+xml;

    # Upstream Definitions
    upstream netbox {
        server 172.30.133.89:8080;
        keepalive 32;
    }
    
    upstream n8n {
        server 172.30.133.89:5678;
        keepalive 32;
    }
    
    upstream anythingllm {
        server 172.30.133.89:3001;
        keepalive 32;
    }
    
    upstream stackstorm {
        server 172.30.133.89:80;
        keepalive 32;
    }

    # Authentication Map for API Keys
    map $http_x_api_key $api_access_granted {
        default 0;
        "your-secure-api-key-here" 1;
        "admin-api-key-12345" 1;
    }

    # HTTPS Server - Smart Security Gateway
    server {
        listen 443 ssl http2;
        server_name 172.30.133.89;
        
        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security Limits
        limit_conn conn_limit_per_ip 20;

        # Root Location - Security Dashboard
        location = / {
            limit_req zone=web burst=10 nodelay;
            return 200 'üîí Smart Security Gateway\n\nüåê Web Interfaces:\n‚Ä¢ Netbox: /netbox/\n‚Ä¢ N8N: /n8n/\n‚Ä¢ AnythingLLM: /llm/\n‚Ä¢ StackStorm: /st2/\n\nüîå API Endpoints:\n‚Ä¢ Netbox API: /netbox/api/\n‚Ä¢ N8N API: /n8n/api/\n‚Ä¢ AnythingLLM API: /llm/api/\n‚Ä¢ StackStorm API: /st2/api/\n\nüîë Authentication: X-API-Key header required for APIs\n';
            add_header Content-Type text/plain;
        }

        # Netbox Service (Network Management)
        location /netbox/ {
            limit_req zone=web burst=20 nodelay;
            
            # Proxy Configuration
            proxy_pass http://netbox/;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # N8N Service (Workflow Automation) - Fixed Asset Handling
        location /n8n/ {
            limit_req zone=web burst=20 nodelay;
            
            proxy_pass http://n8n/;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Prefix /n8n;
            
            # WebSocket Support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts for long-running workflows
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # N8N Assets Fix - Route assets to N8N service
        location ~ ^/(assets|static|css|js|fonts|img)/ {
            proxy_pass http://n8n;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_cache_valid 200 1h;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }

        # AnythingLLM Service (AI Interface) - Route to root
        location /llm/ {
            limit_req zone=web burst=10 nodelay;
            
            # Route to AnythingLLM root
            rewrite ^/llm/(.*)$ /$1 break;
            proxy_pass http://anythingllm;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Long timeouts for LLM processing
            proxy_connect_timeout 30s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # StackStorm Service (Automation)
        location /st2/ {
            limit_req zone=web burst=15 nodelay;
            
            proxy_pass http://stackstorm/;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket Support for StackStorm events
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            proxy_buffering off;
        }

        # API Gateway with Authentication
        location ~ ^/(netbox|n8n|llm|st2)/api/ {
            limit_req zone=api burst=30 nodelay;
            
            # API Key Authentication
            if ($api_access_granted = 0) {
                return 401 '{"error": "API key required. Send X-API-Key header."}';
            }
            
            # Route to appropriate service
            set $target "";
            if ($uri ~ ^/netbox/api/) { set $target "netbox"; }
            if ($uri ~ ^/n8n/api/) { set $target "n8n"; }
            if ($uri ~ ^/llm/api/) { set $target "anythingllm"; }
            if ($uri ~ ^/st2/api/) { set $target "stackstorm"; }
            
            proxy_pass http://$target;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-API-User $remote_user;
            
            # API Optimizations
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_connect_timeout 30s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # CORS Headers for API access
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-API-Key" always;
            
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
        }

        # Health Check Endpoint
        location /health {
            return 200 '{"status": "healthy", "timestamp": "$time_iso8601", "services": ["netbox", "n8n", "anythingllm", "stackstorm"]}';
            add_header Content-Type application/json;
        }

        # Deny access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Security: Block common attack patterns
        location ~* \.(env|git|svn|htaccess|htpasswd)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Default deny for unmatched locations
        location / {
            return 404 '{"error": "Endpoint not found", "available": ["/netbox/", "/n8n/", "/llm/", "/st2/", "/health"]}';
            add_header Content-Type application/json;
        }
    }

    # Forward Proxy Server (for outbound connections)
    server {
        listen 8080;
        server_name _;
        
        # Forward proxy resolver
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 10s;
        
        # Forward proxy location
        location / {
            proxy_pass http://$http_host$uri$is_args$args;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Security for forward proxy
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Log forward proxy usage
            access_log /var/log/nginx/forward_proxy.log main;
        }
    }
}