worker_processes auto;
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 500M;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=web:10m rate=5r/s;

    # Gzip
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

    # Upstream Services
    upstream netbox {
        server 172.30.133.89:8080;
    }
    
    upstream n8n {
        server 172.30.133.89:5678;
    }
    
    upstream anythingllm {
        server 172.30.133.89:3001;
    }
    
    upstream stackstorm {
        server 172.30.133.89:80;
    }

    # API Key Authentication
    map $http_x_api_key $api_access_granted {
        default 0;
        "secure-api-key-12345" 1;
        "admin-key-67890" 1;
    }

    # HTTPS Server - Smart Security Gateway
    server {
        listen 443 ssl;
        http2 on;
        server_name 172.30.133.89;
        
        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        # Root - Security Dashboard
        location = / {
            limit_req zone=web burst=10;
            return 200 'üîí Smart Security Gateway\n\nüåê Web Interfaces:\n‚Ä¢ Netbox: /netbox/\n‚Ä¢ N8N: /n8n/\n‚Ä¢ AnythingLLM: /llm/\n‚Ä¢ StackStorm: /st2/\n\nüîå API Endpoints:\n‚Ä¢ Netbox API: /netbox/api/\n‚Ä¢ N8N API: /n8n/api/\n‚Ä¢ AnythingLLM API: /llm/api/\n‚Ä¢ StackStorm API: /st2/api/\n\nüîë Authentication: X-API-Key header required for APIs\n';
            add_header Content-Type text/plain;
        }

        # Netbox Service
        location /netbox/ {
            limit_req zone=web burst=20;
            proxy_pass http://netbox/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_buffering off;
            proxy_read_timeout 60s;
        }

        # N8N Service with Asset Fix
        location /n8n/ {
            limit_req zone=web burst=20;
            proxy_pass http://n8n/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Prefix /n8n;
            
            # WebSocket Support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            proxy_buffering off;
            proxy_read_timeout 300s;
        }

        # N8N Assets - Route to N8N service
        location ~ ^/(assets|static|css|js|fonts|img)/ {
            proxy_pass http://n8n;
            proxy_set_header Host $host;
            expires 1h;
        }

        # AnythingLLM Service - Route directly
        location /llm/ {
            limit_req zone=web burst=10;
            
            # Remove /llm prefix and proxy to root
            rewrite ^/llm/(.*)$ /$1 break;
            proxy_pass http://anythingllm;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_buffering off;
            proxy_read_timeout 600s;
        }

        # StackStorm Service
        location /st2/ {
            limit_req zone=web burst=15;
            proxy_pass http://stackstorm/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket Support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            proxy_buffering off;
        }

        # API Gateway with Authentication
        location ~ ^/(netbox|n8n|llm|st2)/api/ {
            limit_req zone=api burst=30;
            
            # API Key Check
            if ($api_access_granted = 0) {
                return 401 '{"error": "API key required. Send X-API-Key header."}';
            }
            
            # Route to correct service
            set $backend "";
            if ($uri ~ ^/netbox/api/) { set $backend "netbox"; }
            if ($uri ~ ^/n8n/api/) { set $backend "n8n"; }
            if ($uri ~ ^/llm/api/) { set $backend "anythingllm"; }
            if ($uri ~ ^/st2/api/) { set $backend "stackstorm"; }
            
            proxy_pass http://$backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS Headers
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, X-API-Key" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            
            proxy_buffering off;
            proxy_read_timeout 120s;
        }

        # Health Check
        location /health {
            return 200 '{"status": "healthy", "services": ["netbox", "n8n", "anythingllm", "stackstorm"]}';
            add_header Content-Type application/json;
        }

        # Security - Block sensitive files
        location ~ /\.(env|git|htaccess)$ {
            deny all;
        }

        # Default handler
        location / {
            return 404 '{"error": "Not found", "available": ["/netbox/", "/n8n/", "/llm/", "/st2/"]}';
            add_header Content-Type application/json;
        }
    }

    # Forward Proxy Server (port 8080)
    server {
        listen 8080;
        server_name _;
        resolver 8.8.8.8;
        
        location / {
            proxy_pass http://$http_host$uri$is_args$args;
            proxy_set_header Host $http_host;
            proxy_connect_timeout 10s;
            proxy_read_timeout 60s;
        }
    }
}