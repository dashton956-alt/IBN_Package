server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: info

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push
    batchwait: 1s
    batchsize: 102400
    timeout: 10s

scrape_configs:
  # Scrape syslog-ng log files
  - job_name: syslog-ng
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog-ng
          __path__: /var/log/syslog-ng/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\S+)\s+(?P<host>\S+)\s+(?P<program>\S+)\[(?P<pid>\d+)\]:\s+(?P<message>.*)$'
      - labels:
          host:
          program:
          pid:
      - timestamp:
          source: timestamp
          format: '2006-01-02T15:04:05.000000-07:00'
      - output:
          source: message

  # Scrape system logs
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: varlogs
          __path__: /var/log/*.log
    pipeline_stages:
      - match:
          selector: '{job="varlogs"}'
          stages:
            - regex:
                expression: '^(?P<timestamp>\S+\s+\S+\s+\S+)\s+(?P<host>\S+)\s+(?P<content>.*)$'
            - labels:
                host:
            - timestamp:
                source: timestamp
                format: 'Jan 02 15:04:05'

  # Scrape Docker container logs (if needed)
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'stream'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
    pipeline_stages:
      - docker: {}
      - json:
          expressions:
            timestamp: time
            message: log
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - output:
          source: message

  # Additional job for Kafka-sourced logs (via file tail)
  - job_name: kafka-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: kafka-logs
          source: kafka
          __path__: /var/log/kafka-consumer/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            host: host
            severity: severity
            message: message
            program: program
            facility: facility
      - labels:
          host:
          severity:
          program:
          facility:
      - timestamp:
          source: timestamp
          format: RFC3339
      - output:
          source: message
